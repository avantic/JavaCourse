<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
 	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.charSet">utf8</prop>
			</props>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>net.avantic.course.vacation.model.Employee</value>
				<value>net.avantic.course.vacation.model.VacationRequest</value>
			</list>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<tx:method name="save*"	read-only="false"	propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="reset*"	read-only="false"	propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="delete*"	read-only="false"	propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="*"		read-only="true"	propagation="SUPPORTS" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="daoOperation" expression="execution(* net.avantic.course.vacation.dao..*DAO.*(..))" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="daoOperation" />
	</aop:config>
 
</beans>